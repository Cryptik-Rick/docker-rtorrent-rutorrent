pid /var/run/nginx/nginx.pid;
worker_processes auto;
worker_rlimit_nofile 8192;
error_log /proc/self/fd/2 info;

load_module "modules/ngx_http_dav_ext_module.so";
load_module "modules/ngx_http_geoip2_module.so";

events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
}

http {
    include mime.types;
    default_type application/octet-stream;

    aio threads;
    sendfile on;

    ## Keepalive
    keepalive_timeout     15;
    keepalive_disable     msie6;
    keepalive_requests    100;

    ## TCP options
    tcp_nopush  on;
    tcp_nodelay on;

    ## Temp folders
    client_body_temp_path /tmp/nginx 1 2;
    proxy_temp_path /tmp/nginx-proxy;
    fastcgi_temp_path /tmp/nginx-fastcgi;
    uwsgi_temp_path /tmp/nginx-uwsgi;
    scgi_temp_path /tmp/nginx-scgi;

    ## Handling of IPs in proxied and load balancing situations
    set_real_ip_from @REAL_IP_FROM@;
    real_ip_header @REAL_IP_HEADER@;

    # Log
    log_format main '$@LOG_IP_VAR@ - $remote_user [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent"';
    access_log /proc/self/fd/1 main;

    ## Hide the Nginx version number
    server_tokens off;

    ## Delay basic auth prompt
    auth_delay @AUTH_DELAY@;

    include /etc/nginx/conf.d/*.conf;
}

# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name yourdomain.com;

    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS server block
server {
    listen 443 ssl;
    server_name yourdomain.com;

    ssl_certificate /etc/ssl/certs/your_domain.crt;
    ssl_certificate_key /etc/ssl/private/your_domain.key;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    location / {
        # Basic authentication
        auth_basic "Restricted Content";
        auth_basic_user_file /etc/nginx/.htpasswd;

        # Reverse proxy to the application
        proxy_pass http://127.0.0.1:8080;  # Adjust the port as needed
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}